name: build and push docker

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3.3.0

      - uses: actions/setup-python@v4.5.0
        with:
          python-version: '3.10'

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1.3.3
        with:
          version: 1.3.2
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install Python dependencies
        run: |
          poetry install --with prod

      - name: Lint python code
        run: poetry run flake8 --ignore=E501,F401,E402,F811,E731,F403 .

      - name: Run django checks
        run: poetry run python manage.py check

      - name: Check migrations
        run: poetry run python manage.py makemigrations --dry-run --check

      - name: Run tests
        run: FAKE_REDIS=1 DEBUG=1 poetry run py.test

  docker:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.3.0

      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - uses: docker/build-push-action@v4.0.0
        name: Build and push
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
